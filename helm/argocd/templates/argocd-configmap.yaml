apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "argocd-custom.fullname" . }}-cm
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "argocd-custom.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-options: PruneLast=true
    argocd.argoproj.io/health: |
      {
        "status": "Healthy",
        "message": "ArgoCD configuration is ready"
      }
data:
  # ArgoCD configuration
  url: https://{{ .Values.argocd.server.ingress.hosts | first }}
  admin.enabled: "true"
  application.instanceLabelKey: argocd.argoproj.io/instance
  configManagementPlugins: |
    - name: kustomize
      init:
        command: [sh, -c]
        args: ["echo 'Initializing kustomize'"]
      generate:
        command: [kustomize, build]
        args: [.]
    - name: helm
      init:
        command: [sh, -c]
        args: ["echo 'Initializing helm'"]
      generate:
        command: [helm, template]
        args: [.]
  
  database.host: "{{ include "argocd-custom.postgresqlServiceName" . }}"
  database.port: "5432"
  database.name: "{{ .Values.postgresql.auth.database }}"
  database.user: "{{ .Values.postgresql.auth.username }}"
  
  redis.host: "{{ include "argocd-custom.fullname" . }}-redis"
  redis.port: "6379"
  
  repos: |
    - type: git
      url: https://github.com/argoproj/argocd-example-apps
      insecure: true
  
  application.controller.replicas: "1"
  application.server.replicas: "1"
  application.repoServer.replicas: "1" 