apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "argocd-custom.fullname" . }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "argocd-custom.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ include "argocd-custom.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      {{- include "argocd-custom.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "argocd-custom.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
      annotations:
        {{- with .Values.postgresql.primary.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "argocd-custom.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.postgresql.primary.securityContext | nindent 8 }}
      containers:
      - name: postgresql
        image: "{{ .Values.global.imageRegistry | default "docker.io" }}/bitnami/postgresql:15.4.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "argocd-custom.fullname" . }}-postgresql
              key: postgres-password
        - name: POSTGRESQL_DATABASE
          value: {{ .Values.postgresql.auth.database | quote }}
        - name: POSTGRESQL_USER
          value: {{ .Values.postgresql.auth.username | quote }}
        - name: PGDATA
          value: /bitnami/postgresql/data
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U {{ .Values.postgresql.auth.username }} -d {{ .Values.postgresql.auth.database }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U {{ .Values.postgresql.auth.username }} -d {{ .Values.postgresql.auth.database }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 6
        resources:
          {{- toYaml .Values.postgresql.primary.resources | nindent 10 }}
        volumeMounts:
        - name: data
          mountPath: /bitnami/postgresql
        - name: dshm
          mountPath: /dev/shm
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.postgresql.primary.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.postgresql.primary.persistence.size }} 