apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argocd-custom.fullname" . }}-repo-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "argocd-custom.labels" . | nindent 4 }}
    app.kubernetes.io/component: repo-server
  annotations:
    argocd.argoproj.io/health: |
      {
        "status": "Healthy",
        "message": "Repo server is running"
      }
spec:
  replicas: {{ .Values.argocd.repoServer.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "argocd-custom.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: repo-server
  template:
    metadata:
      labels:
        {{- include "argocd-custom.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: repo-server
      annotations:
        argocd.argoproj.io/health: |
          {
            "status": "Healthy",
            "message": "Repo server pod is ready"
          }
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "argocd-custom.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.argocd.redis.enabled }}
      initContainers:
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z {{ include "argocd-custom.fullname" . }}-redis 6379; do echo waiting for redis; sleep 2; done;']
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
      - name: argocd-repo-server
        image: "{{ .Values.global.imageRegistry | default "quay.io" }}/argoproj/argocd:{{ .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        args:
        - argocd-repo-server
        - --redis
        - {{ include "argocd-custom.fullname" . }}-redis:6379
        ports:
        - name: http
          containerPort: 8081
          protocol: TCP
        env:
        - name: ARGOCD_REPO_SERVER_REPLICAS
          value: "{{ .Values.argocd.repoServer.replicas | default 1 }}"
        startupProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          {{- toYaml .Values.argocd.repoServer.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "argocd-custom.fullname" . }}-repo-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "argocd-custom.labels" . | nindent 4 }}
    app.kubernetes.io/component: repo-server
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8081
    targetPort: http
    protocol: TCP
  selector:
    {{- include "argocd-custom.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: repo-server 