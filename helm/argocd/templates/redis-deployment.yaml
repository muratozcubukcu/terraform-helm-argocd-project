{{- if .Values.argocd.redis.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argocd-custom.fullname" . }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "argocd-custom.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "argocd-custom.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "argocd-custom.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      containers:
      - name: redis
        image: "{{ .Values.global.imageRegistry | default "docker.io" }}/redis:7.2-alpine"
        imagePullPolicy: IfNotPresent
        args:
        - redis-server
        - --appendonly
        - "yes"
        - --requirepass
        - ""
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 6
        resources:
          {{- toYaml .Values.argocd.redis.resources | nindent 10 }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
{{- end }} 