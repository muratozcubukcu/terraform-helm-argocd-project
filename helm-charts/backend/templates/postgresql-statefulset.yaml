{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "backend.fullname" . }}-postgresql
  labels:
    {{- include "backend.labels" . | nindent 4 }}
    component: postgresql
spec:
  serviceName: {{ include "backend.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
      component: postgresql
  template:
    metadata:
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
        component: postgresql
      {{- with .Values.postgresql.primary.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.postgresql.primary.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.postgresPassword | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: PGPASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
          resources:
            {{- toYaml .Values.postgresql.primary.resources | nindent 12 }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
            - name: postgresql-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: postgresql-config
          configMap:
            name: {{ include "backend.fullname" . }}-postgresql-config
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
      spec:
        accessModes: {{ .Values.postgresql.primary.persistence.accessModes }}
        storageClassName: {{ .Values.postgresql.primary.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.postgresql.primary.persistence.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "backend.fullname" . }}-postgresql
  labels:
    {{- include "backend.labels" . | nindent 4 }}
    component: postgresql
spec:
  type: {{ .Values.postgresql.primary.service.type }}
  ports:
    - port: {{ .Values.postgresql.primary.service.port }}
      targetPort: postgresql
      protocol: TCP
      name: postgresql
  selector:
    {{- include "backend.selectorLabels" . | nindent 4 }}
    component: postgresql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "backend.fullname" . }}-postgresql-config
  labels:
    {{- include "backend.labels" . | nindent 4 }}
    component: postgresql
data:
  postgresql.conf: |
    # PostgreSQL configuration
    listen_addresses = '*'
    port = 5432
    max_connections = 100
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 8
    max_parallel_workers_per_gather = 4
    max_parallel_workers = 8
    max_parallel_maintenance_workers = 4
{{- end }} 